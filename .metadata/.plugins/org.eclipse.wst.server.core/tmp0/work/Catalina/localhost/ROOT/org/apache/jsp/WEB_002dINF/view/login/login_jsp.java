/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-07-18 07:54:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("    * {\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("        text-decoration: none;\r\n");
      out.write("        list-style: none;\r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    body {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: center;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        min-height: 100vh;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .login {\r\n");
      out.write("\r\n");
      out.write("        width: 30%;\r\n");
      out.write("        background: white;\r\n");
      out.write("        border-radius: 20px;\r\n");
      out.write("        display: flex;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        flex-direction: column;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .login>.login_inner {\r\n");
      out.write("        text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    h1 {\r\n");
      out.write("        margin-bottom: 50px;\r\n");
      out.write("        font-weight: 700;\r\n");
      out.write("        font-size: 40px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    h4 {\r\n");
      out.write("        font-weight: 700;\r\n");
      out.write("        margin-bottom: 10px;\r\n");
      out.write("        text-align: left;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .login>.login_inner>.login_form>div>.login_id {\r\n");
      out.write("        margin-bottom: 50px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .login>.login_inner>.login_form input {\r\n");
      out.write("        width: 400px;\r\n");
      out.write("        height: 44px;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        border: solid 1px #dadada;\r\n");
      out.write("        background-color: #f5f6f7;\r\n");
      out.write("        font-size: 15px;\r\n");
      out.write("        padding: 10px 14px;\r\n");
      out.write("        color: #2b2929;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .login>.login_inner>.login_form>.login_find {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: space-between;\r\n");
      out.write("        margin: 5px 0 20px;\r\n");
      out.write("        color:#337ab7;;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .login>.login_inner>.login_form>.submit>button {\r\n");
      out.write("        margin-top: 50px;\r\n");
      out.write("        height: 50px;\r\n");
      out.write("        border: 0;\r\n");
      out.write("        outline: none;\r\n");
      out.write("        border-radius: 40px;\r\n");
      out.write("        background-color: #393b39;\r\n");
      out.write("        color: white;\r\n");
      out.write("        font-size: 1.2em;\r\n");
      out.write("        letter-spacing: 2px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        border: 3px solid transparent;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .login>.login_inner>.login_form>.submit>button:hover{\r\n");
      out.write("        background-color: white;\r\n");
      out.write("        color: black;\r\n");
      out.write("        border: 3px solid black;\r\n");
      out.write("        transition: all 0.3s;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"login\">\r\n");
      out.write("        <div class=\"login_inner\">\r\n");
      out.write("            <img src=\"../resources/images/logo_transparent.png\" alt=\"\" width=\"200px\">\r\n");
      out.write("            <h1>LOGIN</h1>\r\n");
      out.write("            <form class=\"login_form\" action=\"/login/login\" method=\"post\">\r\n");
      out.write("                <div class=\"login_idpw\">\r\n");
      out.write("                    <div class=\"login_id\">\r\n");
      out.write("                        <h4>ID</h4>\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" placeholder=\"아이디를 입력하세요.\" name=\"user_Id\" required\r\n");
      out.write("                            autofocus>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"login_pw\">\r\n");
      out.write("                        <h4>PASSWORD</h4>\r\n");
      out.write("                        <input type=\"password\" class=\"form-control\" placeholder=\"비밀번호를 입력하세요.\" name=\"user_Pw\" required\r\n");
      out.write("                            autofocus>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"login_find\">\r\n");
      out.write("                    <a href=\"/login/signup\">회원가입</a>\r\n");
      out.write("                    <a href=\"/home\">홈으로</a>\r\n");
      out.write("                    <a href=\"\">ID/PASSWORD 찾기</a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"submit\">\r\n");
      out.write("                    <button class=\"btn-block\" type=\"submit\">로그인 하기</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
